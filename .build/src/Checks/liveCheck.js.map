{
  "version": 3,
  "sources": ["../../../src/Checks/liveCheck.ts"],
  "sourcesContent": ["import winston from \"winston\";\nimport chalk from \"chalk\";\nimport {restartHandler} from \"../functions/handler/restartHandler\";\nimport {delay} from \"../utils/util\";\nimport {userdata} from \"../index\" ;\nimport {customrestartHandler} from \"../functions/handler/custompageHandler\";\n\nconst TwitchGQL = require(\"@zaarrg/twitch-gql-ttvdropbot\").Init();\nexport async function liveCheck(channelLogin: string, custom: boolean) {\n    if (channelLogin !== undefined) {\n        let status = await TwitchGQL.GetLiveStatus(channelLogin)\n        if (!status) {\n            winston.info(chalk.red('Current Channel offline... Looking for new one...'), {event: \"offline\"})\n            if (custom) {\n                await customrestartHandler(true)\n            } else {\n                await restartHandler(true, true, true, true, false)\n            }\n        }\n    } else {\n        winston.info(chalk.red('No Channel Live at the moment for this Drop... Looking for new one...'), {event: \"offline\"})\n        if (custom) {\n            await customrestartHandler(true)\n        } else {\n            await restartHandler(true, true, true, true, false)\n        }\n    }\n}\n\n\nexport async function allOfflineCheck() {\n    let dropsoffline = 0;\n    userdata.drops.forEach(drop => {\n            if (!drop.live) {\n                dropsoffline++\n            }\n    })\n    if (dropsoffline === userdata.drops.length) {\n        if (userdata.settings.WaitforChannels && userdata.settings.Prioritylist.length === 0) {\n            winston.silly(\" \")\n            winston.info(chalk.red('All Drops for this game are offline... Looking for new live Channels in 5 minutes...'), {event: \"offline\"})\n            winston.silly(' ', {event: \"progressEnd\"})\n            await delay(300000)\n            await restartHandler(true, true, true, true, false)\n        } else {\n            winston.silly(\" \")\n            if (userdata.settings.Prioritylist.length === 0) winston.warn(chalk.yellow('Warning: Please add Games to your Priority List, otherwise the bot will select a random game... or disable this feature in the settings...'))\n            winston.info(chalk.red('All Drops for this game are offline... Looking for new game...'), {event: \"newGame\"})\n            await restartHandler(true, true, true, true, true)\n        }\n\n    }\n}\n\n\nexport async function customallOfflineCheck() {\n    let dropsoffline = 0;\n    userdata.customchannel.forEach(drop => {\n        if (!drop.live) {\n            dropsoffline++\n        }\n    })\n    if (dropsoffline === userdata.customchannel.length) {\n            winston.silly(\" \")\n            winston.info(chalk.red('All Channels are offline... Looking for new live Channels in 5 minutes...'), {event: \"offline\"})\n            winston.silly(' ', {event: \"progressEnd\"})\n            await delay(300000)\n            await customrestartHandler(true)\n    }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoB;AACpB,mBAAkB;AAClB,4BAA6B;AAC7B,kBAAoB;AACpB,eAAuB;AACvB,+BAAmC;AAEnC,MAAM,YAAY,QAAQ,iCAAiC;AAC3D,yBAAgC,cAAsB,QAAiB;AACnE,MAAI,iBAAiB,QAAW;AAC5B,QAAI,SAAS,MAAM,UAAU,cAAc;AAC3C,QAAI,CAAC,QAAQ;AACT,6BAAQ,KAAK,qBAAM,IAAI,sDAAsD,EAAC,OAAO;AACrF,UAAI,QAAQ;AACR,cAAM,mDAAqB;AAAA,aACxB;AACH,cAAM,0CAAe,MAAM,MAAM,MAAM,MAAM;AAAA;AAAA;AAAA,SAGlD;AACH,2BAAQ,KAAK,qBAAM,IAAI,0EAA0E,EAAC,OAAO;AACzG,QAAI,QAAQ;AACR,YAAM,mDAAqB;AAAA,WACxB;AACH,YAAM,0CAAe,MAAM,MAAM,MAAM,MAAM;AAAA;AAAA;AAAA;AAMzD,iCAAwC;AACpC,MAAI,eAAe;AACnB,oBAAS,MAAM,QAAQ,UAAQ;AACvB,QAAI,CAAC,KAAK,MAAM;AACZ;AAAA;AAAA;AAGZ,MAAI,iBAAiB,kBAAS,MAAM,QAAQ;AACxC,QAAI,kBAAS,SAAS,mBAAmB,kBAAS,SAAS,aAAa,WAAW,GAAG;AAClF,6BAAQ,MAAM;AACd,6BAAQ,KAAK,qBAAM,IAAI,yFAAyF,EAAC,OAAO;AACxH,6BAAQ,MAAM,KAAK,EAAC,OAAO;AAC3B,YAAM,uBAAM;AACZ,YAAM,0CAAe,MAAM,MAAM,MAAM,MAAM;AAAA,WAC1C;AACH,6BAAQ,MAAM;AACd,UAAI,kBAAS,SAAS,aAAa,WAAW;AAAG,+BAAQ,KAAK,qBAAM,OAAO;AAC3E,6BAAQ,KAAK,qBAAM,IAAI,mEAAmE,EAAC,OAAO;AAClG,YAAM,0CAAe,MAAM,MAAM,MAAM,MAAM;AAAA;AAAA;AAAA;AAOzD,uCAA8C;AAC1C,MAAI,eAAe;AACnB,oBAAS,cAAc,QAAQ,UAAQ;AACnC,QAAI,CAAC,KAAK,MAAM;AACZ;AAAA;AAAA;AAGR,MAAI,iBAAiB,kBAAS,cAAc,QAAQ;AAC5C,2BAAQ,MAAM;AACd,2BAAQ,KAAK,qBAAM,IAAI,8EAA8E,EAAC,OAAO;AAC7G,2BAAQ,MAAM,KAAK,EAAC,OAAO;AAC3B,UAAM,uBAAM;AACZ,UAAM,mDAAqB;AAAA;AAAA;",
  "names": []
}
