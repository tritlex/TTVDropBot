{
  "version": 3,
  "sources": ["../../../src/Checks/pointsCheck.ts"],
  "sourcesContent": ["import {userdata} from \"../index\";\nimport winston from \"winston\";\nimport chalk from \"chalk\";\nconst TwitchGQL = require(\"@zaarrg/twitch-gql-ttvdropbot\").Init();\n\nlet points = 0;\nexport async function pointsCheck(channelLogin: string) {\n  const opts = {\n    channelLogin: channelLogin\n  };\n\n  const pointsrequest = await TwitchGQL._SendQuery(\"ChannelPointsContext\", opts, '1530a003a7d374b0380b79db0be0534f30ff46e61cffa2bc0e2468a909fbc024', 'OAuth ' + userdata.auth_token, true, {}, true)\n  points = pointsrequest[0].data.community.channel.self.communityPoints.balance  \n  let channelID = pointsrequest[0].data.community.id\n\n  await checkisClaimeable(pointsrequest, channelID, userdata.settings.AutoPoints);\n  return points;\n}\n\nasync function checkisClaimeable(request: any, channelId: string, autopoints: boolean) {\n  let ClaimId = \"\";\n  try {\n    ClaimId = request[0].data.community.channel.self.communityPoints.availableClaim.id;\n  } catch (e) {\n    if (userdata.settings.debug) winston.info(\"No points to be claimed...\");\n  }\n\n  if (ClaimId !== \"\") {\n    //Claim Process\n    const opts = {\n      input: {\n        channelID: channelId,\n        claimID: ClaimId\n      },\n    };\n    if (autopoints) {\n      //Auto Points if possible\n      const claimrequest = await TwitchGQL._SendQuery(\"ClaimCommunityPoints\", opts, '46aaeebe02c99afdf4fc97c7c0cba964124bf6b0af229395f1f6d1feed05b3d0', 'OAuth ' + userdata.auth_token, true, {}, true);\n      points = claimrequest[0].data.claimCommunityPoints.currentPoints;\n      winston.info(chalk.gray('Claimed Channel Points...'), {event: \"claim\"});\n    }\n    else if (!autopoints) { \n      //Skipping Points if disabled\n    winston.info(chalk.gray('Skipping Points...'), {event: \"claim\"});\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,eAAuB;AACvB,qBAAoB;AACpB,mBAAkB;AAClB,MAAM,YAAY,QAAQ,iCAAiC;AAE3D,IAAI,SAAS;AACb,2BAAkC,cAAsB;AACtD,QAAM,OAAO;AAAA,IACX;AAAA;AAGF,QAAM,gBAAgB,MAAM,UAAU,WAAW,wBAAwB,MAAM,oEAAoE,WAAW,kBAAS,YAAY,MAAM,IAAI;AAC7L,WAAS,cAAc,GAAG,KAAK,UAAU,QAAQ,KAAK,gBAAgB;AACtE,MAAI,YAAY,cAAc,GAAG,KAAK,UAAU;AAEhD,QAAM,kBAAkB,eAAe,WAAW,kBAAS,SAAS;AACpE,SAAO;AAAA;AAGT,iCAAiC,SAAc,WAAmB,YAAqB;AACrF,MAAI,UAAU;AACd,MAAI;AACF,cAAU,QAAQ,GAAG,KAAK,UAAU,QAAQ,KAAK,gBAAgB,eAAe;AAAA,WACzE,GAAP;AACA,QAAI,kBAAS,SAAS;AAAO,6BAAQ,KAAK;AAAA;AAG5C,MAAI,YAAY,IAAI;AAElB,UAAM,OAAO;AAAA,MACX,OAAO;AAAA,QACL,WAAW;AAAA,QACX,SAAS;AAAA;AAAA;AAGb,QAAI,YAAY;AAEd,YAAM,eAAe,MAAM,UAAU,WAAW,wBAAwB,MAAM,oEAAoE,WAAW,kBAAS,YAAY,MAAM,IAAI;AAC5L,eAAS,aAAa,GAAG,KAAK,qBAAqB;AACnD,6BAAQ,KAAK,qBAAM,KAAK,8BAA8B,EAAC,OAAO;AAAA,eAEvD,CAAC,YAAY;AAEtB,6BAAQ,KAAK,qBAAM,KAAK,uBAAuB,EAAC,OAAO;AAAA;AAAA;AAAA;",
  "names": []
}
