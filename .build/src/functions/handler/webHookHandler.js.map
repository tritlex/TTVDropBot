{
  "version": 3,
  "sources": ["../../../../src/functions/handler/webHookHandler.ts"],
  "sourcesContent": ["import axios from \"axios\";\nimport {Log} from \"../logger/logger\";\nimport {userdata} from \"../../index\";\n\n//events: requestRetry, claim, newDrop, offline, newGame, get, getResult, progress, start, progressEnd, error, warn, info\n\nlet logqueue: Log[] = []\n\nexport async function webhookHandler(log: Log) {\n    //Remove Color Codes\n    log.message = log.message.replace(/[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g, '').replace(/,/g, ' ');\n    if (!log.event) {\n        log[\"event\"] = log.level;\n    }\n\n        if (log.event === \"progressEnd\" || log.message !== \" \") {\n            await webhooklogic(log)\n        }\n\n}\n\nasync function webhooklogic(log: Log) {\n    logqueue.push(log)\n        if ((logqueue.length > 1 && logqueue[logqueue.length - 1].event !== logqueue[logqueue.length - 2].event)) {\n            if (userdata.settings.WebHookEvents.length > 0 && userdata.settings.WebHookEvents.includes(logqueue[logqueue.length - 2].event!.toLowerCase())) {\n                await clearqueueandsend(log)\n            } else if (userdata.settings.WebHookEvents.length === 0) {\n                await clearqueueandsend(log)\n            } else {\n                logqueue.splice(0, logqueue.length - 1)\n            }\n        }\n}\n\nasync function clearqueueandsend(log: Log) {\n    let arraytosend = logqueue.splice(0, logqueue.length - 1)\n    let stringarray: string[] = []\n    arraytosend.forEach(log => stringarray.push(log.message))\n\n    await sendWebhook(stringarray, arraytosend[0].event!.toString(), userdata.settings.WebHookURL, 8933352).then(status => {\n        if (!status) {\n            throw \"Error while trying to send the discord webhook\"\n        }\n    })\n\n    if (log.event === \"progressEnd\") logqueue = [];\n}\n\n\n//\nexport async function sendWebhook(msg: string[], event: string, webhookurl: string, color: number) {\n    let content = \"\";\n    let currentDrop = \"\";\n    if (userdata.startDrop !== undefined) {\n        currentDrop = userdata.startDrop === \"\" ? \"none\" : userdata.startDrop.toString();\n    } else {\n        currentDrop = \"none\"\n    }\n    if (event === \"progress\") {\n        let convertedProgress = await convertProgressString(msg)\n        content = convertedProgress.toString().split(\",\").join(\"\\n\")\n    } else {\n        content = msg.toString().split(\",\").join(\"\\n\\n\")\n    }\n\n    let config = {\n        headers: {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:98.0) Gecko/20100101 Firefox/98.0',\n            'Content-type': 'application/json'\n        }\n    }\n\n    let embed = {\n        username: \"TTVDropBot\",\n        avatar_url: \"https://i.imgur.com/2WtgNe4.png\",\n        embeds: [\n            {\n                \"author\": {\n                    \"name\": \"TTVDropBot\uD83D\uDCDC\",\n                    \"url\": \"https://github.com/PockySweet/TTVDropBot-Fix\",\n                    \"icon_url\": \"https://i.imgur.com/2WtgNe4.png\"\n                },\n                \"fields\": [\n                    {\n                        \"name\": \"Event\",\n                        \"value\": event,\n                        \"inline\": true\n                    },\n                    {\n                        \"name\": \"Current Drop\",\n                        \"value\": currentDrop,\n                        \"inline\": true\n                    },\n                ],\n                \"color\": color,\n                \"description\": \"```\" + content + \"```\",\n                \"footer\": {\n                    \"text\": \"Send directly from TTVDropbot made by Zarg!\"\n                },\n                \"timestamp\": new Date()\n            }\n        ]\n    }\n\n     return await axios.post(webhookurl, JSON.stringify(embed), config).then(() => {return true}).catch(e => {\n         return false\n     })\n}\n\n\nasync function convertProgressString(stringarray: string[]) {\n    let finallog: string[] = [];\n    stringarray.forEach(log => {\n        let splitted = log.split(\" | \")\n\n        let firsttwo = splitted.slice(0, 2)\n        let rest = splitted.slice(2, splitted.length)\n\n        if (rest.length === 0) {\n            finallog.push(firsttwo.toString().replace(/,/g, ' | ') + \"\\n\")\n        } else {\n            if (firsttwo.length > 0) finallog.push(firsttwo.toString().replace(/,/g, ' | '))\n            if (rest.length > 0) finallog.push(rest.toString().replace(/,/g, ' | ') + \"\\n\")\n        }\n    })\n    return finallog\n}\n"],
  "mappings": "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",
  "names": []
}
