{
  "version": 3,
  "sources": ["../../../../src/functions/handler/watchpageHandler.ts"],
  "sourcesContent": ["import {getTwitchDrops} from \"../get/getTwitchDrops\";\nimport {userdata} from \"../../index\" ;\nimport {allOfflineCheck, liveCheck} from \"../../Checks/liveCheck\";\nimport winston from \"winston\";\nimport {getCurrentDrop} from \"../get/getCurrentDrop\";\nimport {delay, minutestoPercent, retryConfig} from \"../../utils/util\";\nimport {dateCheck} from \"../../Checks/dateCheck\";\nimport axios from \"axios\";\nimport {claimableCheck} from \"../../Checks/claimCheck\";\nimport chalk from \"chalk\";\nimport {SamePercentCheck} from \"../../Checks/samepercentCheck\";\nimport {pointsCheck} from \"../../Checks/pointsCheck\";\nconst TwitchGQL = require(\"@zaarrg/twitch-gql-ttvdropbot\").Init(userdata.clientid);\nconst {Base64} = require('js-base64');\n\nlet status:string = 'stopped';\n\nexport async function WatchingEventHandlerStart(DropcurrentlyWatching: string) {\n    if (status === 'stopped') {\n        await getTwitchDrops(userdata.game, false)\n        await allOfflineCheck()\n        await liveCheck(DropcurrentlyWatching, false);\n        await sendMinuteWatched(DropcurrentlyWatching.toString().toLowerCase())\n        status = 'running'\n        await loop(DropcurrentlyWatching);\n    } else if (status === 'running') {\n        await loop(DropcurrentlyWatching);\n    }\n}\n\nasync function loop(DropcurrentlyWatching: string) {\n    await delay(userdata.settings.ProgressCheckInterval);\n    if (userdata.settings.debug) winston.info('UserDATA %o', JSON.stringify(userdata,null, 2))\n    //Update Drop Data\n    await getTwitchDrops(userdata.game, false)\n    await allOfflineCheck()\n    //Get the right Drop\n    if (status === 'running') {\n        await getCurrentDrop().then(async (CurrentDrop) => {\n            if (userdata.settings.debug) winston.info('CurrentDrop %o', JSON.stringify(CurrentDrop,null, 2))\n            //Switch DropcurrentlyWatching to a live one if current offline and new live ch available\n            if (!CurrentDrop.foundlivech.includes(DropcurrentlyWatching) && CurrentDrop.foundlivech.length > 0) {\n                DropcurrentlyWatching = CurrentDrop.foundlivech[0]\n                winston.info(chalk.gray(\"Switched current Channel to \" + chalk.white(DropcurrentlyWatching) + \"...\"))\n                winston.silly(\" \")\n            }\n            await liveCheck(DropcurrentlyWatching, false);\n            await claimableCheck(CurrentDrop, userdata.settings.AutoClaim, false)\n            await dateCheck(CurrentDrop, false)\n            await SamePercentCheck(CurrentDrop)\n            await pointsCheck(DropcurrentlyWatching).then(points => {\n                winston.info(chalk.gray('Watching ' + chalk.white(DropcurrentlyWatching) + ' | Points: ' + chalk.white(points.toString())), {event: \"progress\"})\n            })\n            for (const [i, drop] of CurrentDrop.timebasedrop.entries()) {\n                let dropslenght = CurrentDrop.timebasedrop.length;\n                    winston.info(chalk.gray(\"Current Progress: \") + chalk.white( minutestoPercent(drop.self.currentMinutesWatched, drop.requiredMinutesWatched)+\" %\") + chalk.gray(\" | Watched \" + chalk.white(drop.self.currentMinutesWatched + \"/\" + drop.requiredMinutesWatched) + \" Minutes\" + chalk.gray(\" | Drop \") + chalk.white((i+1) + \"/\" + dropslenght) + chalk.gray(\" | Status \") + chalk.white(drop.self.status) + chalk.gray(\" | isClaimed \") + chalk.white(drop.self.isClaimed)), {event: \"progress\"});\n\n            }\n            winston.silly(' ', {event: \"progressEnd\"})\n            await sendMinuteWatched(DropcurrentlyWatching)\n        })\n        if (userdata.settings.debug) winston.info('Interval Executed')\n        if (status === 'running') await loop(DropcurrentlyWatching)\n    }\n}\n\nexport async function WatchingEventHandlerStop() {\n    status = 'stopped'\n}\n\nexport async function sendMinuteWatched(ChannelLogin: string) {\n    let opts = {\n        \"channelLogin\":ChannelLogin\n    }\n    let Stream = await TwitchGQL._SendQuery(\"UseLive\", opts, '639d5f11bfb8bf3053b424d9ef650d04c4ebb7d94711d644afb08fe9a0fad5d9', 'OAuth ' + userdata.auth_token, true);\n    let channleid = Stream[0].data.user.id\n    let broadcastid = Stream[0].data.user.stream.id\n\n    const gethtml = await axios.get('https://www.twitch.tv/' + ChannelLogin, {\n        headers: {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:98.0) Gecko/20100101 Firefox/98.0',\n            'encoding': 'utf8',\n            'Client-Id': userdata.clientid,\n            'Authorization': 'OAuth ' + userdata.auth_token,\n        },\n        raxConfig: retryConfig\n    }).catch(err => {\n        winston.error(\"ERROR: Could not load https://www.twitch.tv... Check your connection...\")\n        throw err\n    })\n\n    let SettingsJSReg = new RegExp('https://static\\.twitchcdn\\.net/config/settings\\.[0-9a-f]{32}\\.js')\n    let parsehtml = SettingsJSReg.exec(gethtml.data.toString())\n    if (parsehtml![0] === null) winston.error(\"Error while parsing Settings Url...\")\n\n    const getSettingsJS = await axios.get(parsehtml![0].toString(), {raxConfig: retryConfig}).catch(err => {\n        winston.error(\"ERROR: Could not load your twitch settings... Check your connection...\")\n        throw err\n    })\n\n    let SpadeReg = new RegExp('(https://video-edge-[.\\\\w\\\\-/]+\\\\.ts)')\n    let parseJS = SpadeReg.exec(getSettingsJS.data.toString())\n    if (parseJS![0] === null) winston.error(\"Error while parsing Spade URL...\")\n\n    let payload = [\n        {\n            \"event\": \"minute-watched\",\n            \"properties\": {\n                \"channel_id\": channleid.toString(),\n                \"broadcast_id\": broadcastid.toString(),\n                \"player\": \"site\",\n                \"user_id\": userdata.userid.toString(),\n            }\n        }\n    ]\n    let json_event = JSON.stringify(payload);\n    let b64 = Base64.encode(json_event)\n\n    let config = {\n        headers: {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:98.0) Gecko/20100101 Firefox/98.0',\n            \"Content-type\": \"text/plain\",\n        },\n        raxConfig: retryConfig\n    }\n\n    const post = await axios.post(parseJS![0].toString(), b64, config).catch(err => {\n        winston.error(\"ERROR: Could not send minute watching event...\")\n        throw err\n    })\n    if (userdata.settings.debug) {\n        winston.info('minute sent!!' + post?.status)\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
