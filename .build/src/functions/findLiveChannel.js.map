{
  "version": 3,
  "sources": ["../../../src/functions/findLiveChannel.ts"],
  "sourcesContent": ["import {userdata} from \"../index\" ;\nconst TwitchGQL = require(\"@zaarrg/twitch-gql-ttvdropbot\").Init();\n\nexport async function findLiveChannel(allowedChannels:Array<Channel>) {\n\n    let foundlivechannel: string[] = [];\n\n    if (allowedChannels !== null) {\n        AllowedCHloop:\n            for (const AllowedChannelElement of allowedChannels) {\n                if (await TwitchGQL.GetLiveStatus(AllowedChannelElement.name)) {\n\n                let user = await TwitchGQL.GetUser(AllowedChannelElement.name)\n                if (user.data.user.stream === null) {return foundlivechannel}\n                let game = user.data.user.stream.game.name.toLowerCase()\n\n                if (game === userdata.game.toLowerCase()) {\n                    let TagList = await TwitchGQL._SendQuery(\"RealtimeStreamTagList\", {channelLogin: AllowedChannelElement.name}, '9d952e4aacd4f8bb9f159bd4d5886d72c398007249a8b09e604a651fc2f8ac17', 'OAuth ' + userdata.auth_token, true, {}, true)\n                    if (TagList[0].data.user.stream === null) {return foundlivechannel}\n                    let Tags:Array<Tag> = TagList[0].data.user.stream.tags\n\n                    for (const Tagelement of Tags) {\n                        if (Tagelement.id === 'c2542d6d-cd10-4532-919b-3d19f30a768b') {\n                            foundlivechannel.push(AllowedChannelElement.name)\n                            break AllowedCHloop;\n                        }\n                    }\n                }\n            }\n        }\n    } else {\n        //Find Drop Channel via Tag\n        let opts = {\n            limit: 50,\n            options: {\n                sort: \"VIEWER_COUNT\",\n                tags: [\"c2542d6d-cd10-4532-919b-3d19f30a768b\"]\n            },\n            sortTypeIsRecency: false\n        }\n        const directorypagegame = await TwitchGQL.GetDirectoryPageGame(userdata.game, opts)\n        if (directorypagegame[0].data.game.streams === null) {return foundlivechannel}\n        if (directorypagegame[0].data.game.streams.edges.length > 0) {\n            foundlivechannel.push(directorypagegame[0].data.game.streams.edges[0].node.broadcaster.login)\n        }\n    }\n    return foundlivechannel\n}\n\ntype Channel = {\n    id: string,\n    displayName: string,\n    name: string,\n    __typename: string\n}\n\ntype Tag = {\n    id: string,\n    isLanguageTag: boolean,\n    localizedName: string,\n    tagName: string,\n    __typename: string,\n    scope: string\n}\n\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,eAAuB;AACvB,MAAM,YAAY,QAAQ,iCAAiC;AAE3D,+BAAsC,iBAAgC;AAElE,MAAI,mBAA6B;AAEjC,MAAI,oBAAoB,MAAM;AAC1B;AACI,iBAAW,yBAAyB,iBAAiB;AACjD,YAAI,MAAM,UAAU,cAAc,sBAAsB,OAAO;AAE/D,cAAI,OAAO,MAAM,UAAU,QAAQ,sBAAsB;AACzD,cAAI,KAAK,KAAK,KAAK,WAAW,MAAM;AAAC,mBAAO;AAAA;AAC5C,cAAI,OAAO,KAAK,KAAK,KAAK,OAAO,KAAK,KAAK;AAE3C,cAAI,SAAS,kBAAS,KAAK,eAAe;AACtC,gBAAI,UAAU,MAAM,UAAU,WAAW,yBAAyB,EAAC,cAAc,sBAAsB,QAAO,oEAAoE,WAAW,kBAAS,YAAY,MAAM,IAAI;AAC5N,gBAAI,QAAQ,GAAG,KAAK,KAAK,WAAW,MAAM;AAAC,qBAAO;AAAA;AAClD,gBAAI,OAAkB,QAAQ,GAAG,KAAK,KAAK,OAAO;AAElD,uBAAW,cAAc,MAAM;AAC3B,kBAAI,WAAW,OAAO,wCAAwC;AAC1D,iCAAiB,KAAK,sBAAsB;AAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMjB;AAEH,QAAI,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,QACL,MAAM;AAAA,QACN,MAAM,CAAC;AAAA;AAAA,MAEX,mBAAmB;AAAA;AAEvB,UAAM,oBAAoB,MAAM,UAAU,qBAAqB,kBAAS,MAAM;AAC9E,QAAI,kBAAkB,GAAG,KAAK,KAAK,YAAY,MAAM;AAAC,aAAO;AAAA;AAC7D,QAAI,kBAAkB,GAAG,KAAK,KAAK,QAAQ,MAAM,SAAS,GAAG;AACzD,uBAAiB,KAAK,kBAAkB,GAAG,KAAK,KAAK,QAAQ,MAAM,GAAG,KAAK,YAAY;AAAA;AAAA;AAG/F,SAAO;AAAA;",
  "names": []
}
