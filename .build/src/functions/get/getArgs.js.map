{
  "version": 3,
  "sources": ["../../../../src/functions/get/getArgs.ts"],
  "sourcesContent": ["import {version} from \"../../index\";\nimport yargs from \"yargs\";\nimport { hideBin } from 'yargs/helpers'\nimport {userdata} from \"../../index\" ;\nimport fs from \"fs\";\nimport winston from \"winston\";\nimport chalk from \"chalk\";\n\nexport async function setArgs() {\n\n    await yargs(hideBin(process.argv))\n        .scriptName(\"./TTVDropBot or index.js\")\n        .usage(\"Usage: $0 --arg...\")\n        .version(version)\n        .option(\"chrome\", {\n            alias: \"c\",\n            describe: \"The path to your Chrome executable.\",\n            type: \"string\",\n            nargs: 1,\n        })\n        .example(\n            \"--chrome C:path:to:chrome.exe\",\n            \"Sets your chrome path.\",\n        )\n        .option(\"userdata\", {\n            alias: \"u\",\n            describe: \"The path to your userdata folder location.\",\n            type: \"string\",\n            nargs: 1,\n        })\n        .example(\n            \"--userdata C:path:to:userdata-folder\",\n            \"Sets your userdata path.\",\n        )\n        .option(\"webhook\", {\n            alias: \"wh\",\n            describe: \"The Discord Webhook URL.\",\n            type: \"string\",\n            nargs: 1,\n        })\n        .example(\n            \"--webhook https:discord.com:api:webh....\",\n            \"Sets your webhook url.\",\n        )\n        .option(\"webhookevents\", {\n            describe: \"Set what events should be send via webhook.\",\n            type: \"array\"\n        })\n        .example(\n            \"--webhookevents requestretry claim newdrop offline newgame get getresult progress start error warn info\",\n            \"Defaults to the events in this example provided.\",\n        )\n        .option(\"interval\", {\n            alias: \"i\",\n            describe: \"The progress interval in ms.\",\n            type: \"number\",\n            nargs: 1,\n        })\n        .example(\n            \"--interval 30000\",\n            \"Sets the progress interval to 30s.\",\n        )\n        .option(\"retryinterval\", {\n            alias: \"retry\",\n            describe: \"The retry interval in ms.\",\n            type: \"number\",\n            nargs: 1,\n        })\n        .example(\n            \"--retryinterval 30000\",\n            \"Sets the retry interval to 30s.\",\n        )\n        .option(\"games\", {\n            alias: \"g\",\n            describe: \"The Games the bot should watch.\",\n            type: \"array\"\n        })\n        .example(\n            \"--games Rust Krunker 'Elite: Dangerous' \",\n            \"Sets the Prioritylist to Rust, Krunker and Elite: Dangerous.\",\n        )\n        .option(\"token\", {\n            describe: \"Your twitch auth_token.\",\n            type: \"string\"\n        })\n        .example(\n            \"--token yourkindalongtoken \",\n            \"Sets the your current twitch auth token, overwriting any in twitch-session.json.\",\n        )\n        .option(\"showtoken\", {\n            describe: \"Show your auth_token after login.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n        .option(\"debug\", {\n            alias: \"d\",\n            describe: \"Enable Debug logging.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n        .option(\"displayless\", {\n            alias: \"dl\",\n            describe: \"Enable Displayless mode.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n        .option(\"forcecustomchannel\", {\n            describe: \"Force Custom Channels. Only useful for display-less mode.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n        .option(\"waitforchannels\", {\n            alias: \"waitonline\",\n            describe: \"Disable waitforchannels, forcing the bot to not wait for other channels with drops instead switch the game.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n        .option(\"autoclaim\", {\n            describe: \"Enable autoclaim for drops.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n        .option(\"autopoints\", {\n            describe: \"Enable auto points for channels.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n        .option(\"log\", {\n            describe: \"Enable logging to file.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n        .option(\"usekeepalive\", {\n            describe: \"Enable Express KeepAlive.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n        .option(\"tray\", {\n            describe: \"Start app in the tray.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n        .describe(\"help\", \"Show help.\") // Override --help usage message.\n        .describe(\"version\", \"Show version number.\") // Override --version usage message.\n        .epilog(\"TTVDropBot made possible by Zarg\");\n\n\n}\n\nexport async function matchArgs() {\n    const args : any = yargs.argv\n    if (args.chrome !== undefined) userdata.settings.Chromeexe = args.chrome;\n    if (args.userdata!==undefined) userdata.settings.UserDataPath = args.userdata\n    if (args.webhook!==undefined) userdata.settings.WebHookURL = args.webhook\n    if (args.interval!==undefined) userdata.settings.ProgressCheckInterval = args.interval\n    if (args.games!==undefined) userdata.settings.Prioritylist = args.games\n    if (args.debug!==undefined) userdata.settings.debug = args.debug\n    if (args.displayless!==undefined) userdata.settings.displayless = args.displayless\n    if (args.forcecustomchannel!==undefined) userdata.settings.ForceCustomChannel = args.forcecustomchannel\n    if (args.waitforchannels!==undefined) userdata.settings.WaitforChannels = args.waitforchannels\n    if (args.autoclaim!==undefined) userdata.settings.AutoClaim = args.autoclaim\n    if (args.autopoints!==undefined) userdata.settings.AutoPoints = args.autopoints\n    if (args.log!==undefined) userdata.settings.LogToFile = args.log\n    if (args.usekeepalive!==undefined) userdata.settings.UseKeepAlive = args.usekeepalive\n    if (args.retryinterval!==undefined) userdata.settings.RetryDelay = args.retryinterval\n    if (args.webhookevents!==undefined) userdata.settings.WebHookEvents = args.webhookevents\n    if (args.showtoken!==undefined) userdata.showtoken = args.showtoken\n    if (args.token !== undefined) userdata.auth_token = args.token\n\n    if (process.env.ttvdropbot_chrome !== undefined) userdata.settings.Chromeexe = process.env.ttvdropbot_chrome;\n    if (process.env.ttvdropbot_userdata!==undefined) userdata.settings.UserDataPath = process.env.ttvdropbot_userdata\n    if (process.env.ttvdropbot_webhook!==undefined) userdata.settings.WebHookURL = process.env.ttvdropbot_webhook\n    if (process.env.ttvdropbot_interval!==undefined) userdata.settings.ProgressCheckInterval = parseInt(process.env.ttvdropbot_interval)\n    if (process.env.ttvdropbot_games!==undefined) {\n        let stringarray = process.env.ttvdropbot_games.split(' ')\n        let replacedarray = stringarray.map(game => game.replace(/_/g, ' '));\n        userdata.settings.Prioritylist = replacedarray;\n    }\n    if (process.env.ttvdropbot_forcecustomchannel!==undefined) userdata.settings.ForceCustomChannel = JSON.parse(process.env.ttvdropbot_forcecustomchannel);\n    if (process.env.ttvdropbot_debug!==undefined) userdata.settings.debug = JSON.parse(process.env.ttvdropbot_debug);\n    if (process.env.ttvdropbot_displayless!==undefined) userdata.settings.displayless = JSON.parse(process.env.ttvdropbot_displayless)\n    if (process.env.ttvdropbot_waitforchannels!==undefined) userdata.settings.WaitforChannels = JSON.parse(process.env.ttvdropbot_waitforchannels)\n    if (process.env.ttvdropbot_autoclaim!==undefined) userdata.settings.AutoClaim = JSON.parse(process.env.ttvdropbot_autoclaim)\n    if (process.env.ttvdropbot_autopoints!==undefined) userdata.settings.AutoPoints = JSON.parse(process.env.ttvdropbot_autopoints)\n    if (process.env.ttvdropbot_log!==undefined) userdata.settings.LogToFile = JSON.parse(process.env.ttvdropbot_log)\n    if (process.env.ttvdropbot_usekeepalive!==undefined) userdata.settings.UseKeepAlive = JSON.parse(process.env.ttvdropbot_usekeepalive)\n    if (process.env.ttvdropbot_retryinterval!==undefined) userdata.settings.RetryDelay = parseInt(process.env.ttvdropbot_retryinterval)\n    if (process.env.ttvdropbot_webhookevents!==undefined) userdata.settings.WebHookEvents = process.env.ttvdropbot_webhookevents.split(' ')\n    if (process.env.ttvdropbot_showtoken !== undefined) userdata.showtoken = JSON.parse(process.env.ttvdropbot_showtoken)\n    if (process.env.ttvdropbot_token !== undefined) userdata.auth_token = process.env.ttvdropbot_token\n\n}\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,eAAsB;AACtB,mBAAkB;AAClB,qBAAwB;AACxB,gBAAuB;AAKvB,yBAAgC;AAE5B,QAAM,0BAAM,4BAAQ,QAAQ,OACvB,WAAW,4BACX,MAAM,sBACN,QAAQ,kBACR,OAAO,UAAU;AAAA,IACd,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,QACG,iCACA,0BAEH,OAAO,YAAY;AAAA,IAChB,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,QACG,wCACA,4BAEH,OAAO,WAAW;AAAA,IACf,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,QACG,4CACA,0BAEH,OAAO,iBAAiB;AAAA,IACrB,UAAU;AAAA,IACV,MAAM;AAAA,KAET,QACG,2GACA,oDAEH,OAAO,YAAY;AAAA,IAChB,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,QACG,oBACA,sCAEH,OAAO,iBAAiB;AAAA,IACrB,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,QACG,yBACA,mCAEH,OAAO,SAAS;AAAA,IACb,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,KAET,QACG,4CACA,gEAEH,OAAO,SAAS;AAAA,IACb,UAAU;AAAA,IACV,MAAM;AAAA,KAET,QACG,+BACA,oFAEH,OAAO,aAAa;AAAA,IACjB,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,OAAO,SAAS;AAAA,IACb,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,OAAO,eAAe;AAAA,IACnB,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,OAAO,sBAAsB;AAAA,IAC1B,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,OAAO,mBAAmB;AAAA,IACvB,OAAO;AAAA,IACP,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,OAAO,aAAa;AAAA,IACjB,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,OAAO,cAAc;AAAA,IAClB,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,OAAO,OAAO;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,OAAO,gBAAgB;AAAA,IACpB,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,OAAO,QAAQ;AAAA,IACZ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,KAEV,SAAS,QAAQ,cACjB,SAAS,WAAW,wBACpB,OAAO;AAAA;AAKhB,2BAAkC;AAC9B,QAAM,OAAa,qBAAM;AACzB,MAAI,KAAK,WAAW;AAAW,uBAAS,SAAS,YAAY,KAAK;AAClE,MAAI,KAAK,aAAW;AAAW,uBAAS,SAAS,eAAe,KAAK;AACrE,MAAI,KAAK,YAAU;AAAW,uBAAS,SAAS,aAAa,KAAK;AAClE,MAAI,KAAK,aAAW;AAAW,uBAAS,SAAS,wBAAwB,KAAK;AAC9E,MAAI,KAAK,UAAQ;AAAW,uBAAS,SAAS,eAAe,KAAK;AAClE,MAAI,KAAK,UAAQ;AAAW,uBAAS,SAAS,QAAQ,KAAK;AAC3D,MAAI,KAAK,gBAAc;AAAW,uBAAS,SAAS,cAAc,KAAK;AACvE,MAAI,KAAK,uBAAqB;AAAW,uBAAS,SAAS,qBAAqB,KAAK;AACrF,MAAI,KAAK,oBAAkB;AAAW,uBAAS,SAAS,kBAAkB,KAAK;AAC/E,MAAI,KAAK,cAAY;AAAW,uBAAS,SAAS,YAAY,KAAK;AACnE,MAAI,KAAK,eAAa;AAAW,uBAAS,SAAS,aAAa,KAAK;AACrE,MAAI,KAAK,QAAM;AAAW,uBAAS,SAAS,YAAY,KAAK;AAC7D,MAAI,KAAK,iBAAe;AAAW,uBAAS,SAAS,eAAe,KAAK;AACzE,MAAI,KAAK,kBAAgB;AAAW,uBAAS,SAAS,aAAa,KAAK;AACxE,MAAI,KAAK,kBAAgB;AAAW,uBAAS,SAAS,gBAAgB,KAAK;AAC3E,MAAI,KAAK,cAAY;AAAW,uBAAS,YAAY,KAAK;AAC1D,MAAI,KAAK,UAAU;AAAW,uBAAS,aAAa,KAAK;AAEzD,MAAI,QAAQ,IAAI,sBAAsB;AAAW,uBAAS,SAAS,YAAY,QAAQ,IAAI;AAC3F,MAAI,QAAQ,IAAI,wBAAsB;AAAW,uBAAS,SAAS,eAAe,QAAQ,IAAI;AAC9F,MAAI,QAAQ,IAAI,uBAAqB;AAAW,uBAAS,SAAS,aAAa,QAAQ,IAAI;AAC3F,MAAI,QAAQ,IAAI,wBAAsB;AAAW,uBAAS,SAAS,wBAAwB,SAAS,QAAQ,IAAI;AAChH,MAAI,QAAQ,IAAI,qBAAmB,QAAW;AAC1C,QAAI,cAAc,QAAQ,IAAI,iBAAiB,MAAM;AACrD,QAAI,gBAAgB,YAAY,IAAI,UAAQ,KAAK,QAAQ,MAAM;AAC/D,uBAAS,SAAS,eAAe;AAAA;AAErC,MAAI,QAAQ,IAAI,kCAAgC;AAAW,uBAAS,SAAS,qBAAqB,KAAK,MAAM,QAAQ,IAAI;AACzH,MAAI,QAAQ,IAAI,qBAAmB;AAAW,uBAAS,SAAS,QAAQ,KAAK,MAAM,QAAQ,IAAI;AAC/F,MAAI,QAAQ,IAAI,2BAAyB;AAAW,uBAAS,SAAS,cAAc,KAAK,MAAM,QAAQ,IAAI;AAC3G,MAAI,QAAQ,IAAI,+BAA6B;AAAW,uBAAS,SAAS,kBAAkB,KAAK,MAAM,QAAQ,IAAI;AACnH,MAAI,QAAQ,IAAI,yBAAuB;AAAW,uBAAS,SAAS,YAAY,KAAK,MAAM,QAAQ,IAAI;AACvG,MAAI,QAAQ,IAAI,0BAAwB;AAAW,uBAAS,SAAS,aAAa,KAAK,MAAM,QAAQ,IAAI;AACzG,MAAI,QAAQ,IAAI,mBAAiB;AAAW,uBAAS,SAAS,YAAY,KAAK,MAAM,QAAQ,IAAI;AACjG,MAAI,QAAQ,IAAI,4BAA0B;AAAW,uBAAS,SAAS,eAAe,KAAK,MAAM,QAAQ,IAAI;AAC7G,MAAI,QAAQ,IAAI,6BAA2B;AAAW,uBAAS,SAAS,aAAa,SAAS,QAAQ,IAAI;AAC1G,MAAI,QAAQ,IAAI,6BAA2B;AAAW,uBAAS,SAAS,gBAAgB,QAAQ,IAAI,yBAAyB,MAAM;AACnI,MAAI,QAAQ,IAAI,yBAAyB;AAAW,uBAAS,YAAY,KAAK,MAAM,QAAQ,IAAI;AAChG,MAAI,QAAQ,IAAI,qBAAqB;AAAW,uBAAS,aAAa,QAAQ,IAAI;AAAA;",
  "names": []
}
