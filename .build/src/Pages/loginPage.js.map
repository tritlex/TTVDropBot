{
  "version": 3,
  "sources": ["../../../src/Pages/loginPage.ts"],
  "sourcesContent": ["import chalk from \"chalk\";\nimport { userdata } from \"../index\";\n\nconst winston = require(\"winston\");\nconst fs = require(\"fs\");\nconst inputReader = require(\"wait-console-input\");\nconst puppeteer = require('puppeteer-core')\n\nexport async function Login() {\n    await puppeteer.launch({ headless: false , executablePath: userdata.settings.Chromeexe, userDataDir: userdata.settings.UserDataPath, args: ['--no-sandbox']}).then(async (browser: any) => {\n        //Open Login Page\n        const loginpage = await browser.newPage()\n        await loginpage.setDefaultTimeout(0)\n        //Set Cookies if found for Autologin\n        if (userdata.settings.UserDataPath === \"\" && fs.existsSync('./twitch-session.json')) {\n            let file = fs.readFileSync('./twitch-session.json', 'utf8');\n            let cokkies = await JSON.parse(file)\n            await loginpage.setCookie.apply(loginpage, cokkies);\n        }\n        //Goto Login Page\n        winston.silly(\" \");\n        winston.info(chalk.gray(\"Starting Login Page...\"))\n        await loginpage.goto(userdata.loginpageurl, {waitUntil: \"networkidle2\"})\n\n        await loginpage.waitForNavigation().then(async () => {\n            if (loginpage.url() !== 'https://www.twitch.tv/?no-reload=true') {\n                if (!userdata.settings.displayless) inputReader.wait(chalk.gray(\"Press any Key to continue...\"))\n                process.exit(22);\n            }\n\n            winston.silly(\" \");\n            winston.info(chalk.green(\"Success Login...\"))\n            //Save Cookies\n            winston.silly(\" \");\n            winston.info(chalk.gray(\"Saving Cookies...\"))\n            userdata.cookies = await loginpage.cookies();\n\n            await fs.promises.writeFile('twitch-session.json', JSON.stringify(userdata.cookies, null, 2)).then(function () {\n                winston.silly(\" \");\n                winston.info(chalk.green(\"Successfully Saved Cookies...\"))\n                winston.silly(\" \");\n            }).catch((err: any) => {throw err})\n        })\n        //Close Browser\n        winston.silly(\" \");\n        winston.info(chalk.gray(\"Closing Browser and Moving on...\"))\n        await browser.close()\n    })\n}\n\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,eAAyB;AAEzB,MAAM,UAAU,QAAQ;AACxB,MAAM,KAAK,QAAQ;AACnB,MAAM,cAAc,QAAQ;AAC5B,MAAM,YAAY,QAAQ;AAE1B,uBAA8B;AAC1B,QAAM,UAAU,OAAO,EAAE,UAAU,OAAQ,gBAAgB,kBAAS,SAAS,WAAW,aAAa,kBAAS,SAAS,cAAc,MAAM,CAAC,mBAAkB,KAAK,OAAO,YAAiB;AAEvL,UAAM,YAAY,MAAM,QAAQ;AAChC,UAAM,UAAU,kBAAkB;AAElC,QAAI,kBAAS,SAAS,iBAAiB,MAAM,GAAG,WAAW,0BAA0B;AACjF,UAAI,OAAO,GAAG,aAAa,yBAAyB;AACpD,UAAI,UAAU,MAAM,KAAK,MAAM;AAC/B,YAAM,UAAU,UAAU,MAAM,WAAW;AAAA;AAG/C,YAAQ,MAAM;AACd,YAAQ,KAAK,qBAAM,KAAK;AACxB,UAAM,UAAU,KAAK,kBAAS,cAAc,EAAC,WAAW;AAExD,UAAM,UAAU,oBAAoB,KAAK,YAAY;AACjD,UAAI,UAAU,UAAU,yCAAyC;AAC7D,YAAI,CAAC,kBAAS,SAAS;AAAa,sBAAY,KAAK,qBAAM,KAAK;AAChE,gBAAQ,KAAK;AAAA;AAGjB,cAAQ,MAAM;AACd,cAAQ,KAAK,qBAAM,MAAM;AAEzB,cAAQ,MAAM;AACd,cAAQ,KAAK,qBAAM,KAAK;AACxB,wBAAS,UAAU,MAAM,UAAU;AAEnC,YAAM,GAAG,SAAS,UAAU,uBAAuB,KAAK,UAAU,kBAAS,SAAS,MAAM,IAAI,KAAK,WAAY;AAC3G,gBAAQ,MAAM;AACd,gBAAQ,KAAK,qBAAM,MAAM;AACzB,gBAAQ,MAAM;AAAA,SACf,MAAM,CAAC,QAAa;AAAC,cAAM;AAAA;AAAA;AAGlC,YAAQ,MAAM;AACd,YAAQ,KAAK,qBAAM,KAAK;AACxB,UAAM,QAAQ;AAAA;AAAA;",
  "names": []
}
