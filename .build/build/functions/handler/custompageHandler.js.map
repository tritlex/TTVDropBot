{
  "version": 3,
  "sources": ["../../../../build/functions/handler/custompageHandler.js"],
  "sourcesContent": ["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.customrestartHandler = exports.CustomEventHandlerStart = void 0;\nconst index_1 = require(\"../../index\");\nconst liveCheck_1 = require(\"../../Checks/liveCheck\");\nconst watchpageHandler_1 = require(\"./watchpageHandler\");\nconst pointsCheck_1 = require(\"../../Checks/pointsCheck\");\nconst util_1 = require(\"../../utils/util\");\nconst winston_1 = __importDefault(require(\"winston\"));\nconst chalk_1 = __importDefault(require(\"chalk\"));\nconst getCustomChannel_1 = require(\"../get/getCustomChannel\");\nlet status = 'stopped';\nfunction CustomEventHandlerStart(DropcurrentlyWatching) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (status === 'stopped') {\n            yield (0, liveCheck_1.customallOfflineCheck)();\n            yield (0, liveCheck_1.liveCheck)(DropcurrentlyWatching, true);\n            yield (0, pointsCheck_1.pointsCheck)(DropcurrentlyWatching);\n            yield (0, watchpageHandler_1.sendMinuteWatched)(DropcurrentlyWatching.toString().toLowerCase());\n            status = 'running';\n            yield customloop(DropcurrentlyWatching);\n        }\n        else if (status === 'running') {\n            yield customloop(DropcurrentlyWatching);\n        }\n    });\n}\nexports.CustomEventHandlerStart = CustomEventHandlerStart;\nlet watchedtime = 0;\nfunction customloop(channelLogin) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield (0, util_1.delay)(index_1.userdata.settings.ProgressCheckInterval);\n        watchedtime = (watchedtime + index_1.userdata.settings.ProgressCheckInterval);\n        //find right custom drop\n        yield getCustomDrop(channelLogin).then((currentdrop) => __awaiter(this, void 0, void 0, function* () {\n            yield (0, getCustomChannel_1.customCheckLive)(false);\n            yield (0, liveCheck_1.customallOfflineCheck)();\n            yield (0, liveCheck_1.liveCheck)(channelLogin, true);\n            let neededtimeinms = (currentdrop.Time * 60000);\n            if (status === 'running') {\n                if (currentdrop.WatchType === \"Watch until time runs out\") {\n                    if (watchedtime < neededtimeinms) {\n                        yield (0, pointsCheck_1.pointsCheck)(channelLogin).then((points) => __awaiter(this, void 0, void 0, function* () {\n                            yield (0, watchpageHandler_1.sendMinuteWatched)(channelLogin.toString().toLowerCase());\n                            winston_1.default.info(chalk_1.default.gray(\"Watching since: \") + chalk_1.default.white((Number(watchedtime / 60000).toFixed(2))) + chalk_1.default.gray(\" | Minutes Left: \" + chalk_1.default.white((neededtimeinms - watchedtime) / 60000)) + chalk_1.default.gray(\" | Points: \") + chalk_1.default.white(points.toString()), { event: \"progress\" });\n                            winston_1.default.silly('', { event: \"progressEnd\" });\n                            yield customloop(channelLogin);\n                        }));\n                    }\n                    else if (watchedtime >= neededtimeinms) {\n                        status = 'stopped';\n                        winston_1.default.info(chalk_1.default.green('Finished watching the channel: ' + channelLogin), { event: \"newDrop\" });\n                        winston_1.default.info(chalk_1.default.gray('Looking for a new Channel...'), { event: \"newDrop\" });\n                        yield customrestartHandler(true);\n                    }\n                }\n                else {\n                    yield (0, pointsCheck_1.pointsCheck)(channelLogin).then((points) => __awaiter(this, void 0, void 0, function* () {\n                        yield (0, watchpageHandler_1.sendMinuteWatched)(channelLogin.toString().toLowerCase());\n                        winston_1.default.info(chalk_1.default.gray(\"Watching since: \") + chalk_1.default.white((Number(watchedtime / 60000).toFixed(2))) + chalk_1.default.gray(\" | Points: \") + chalk_1.default.white(points.toString()), { event: \"progress\" });\n                        winston_1.default.silly('', { event: \"progressEnd\" });\n                        yield customloop(channelLogin);\n                    }));\n                }\n            }\n        }));\n    });\n}\nfunction customrestartHandler(random) {\n    return __awaiter(this, void 0, void 0, function* () {\n        watchedtime = 0;\n        yield (0, getCustomChannel_1.customCheckLive)(false);\n        yield (0, getCustomChannel_1.askCustomChannelStart)(random, true);\n        yield CustomEventHandlerStart(index_1.userdata.startDrop);\n    });\n}\nexports.customrestartHandler = customrestartHandler;\nfunction getCustomDrop(ChannelLogin) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let currentdrop = {\n            Name: '',\n            TTVLink: '',\n            WatchType: '',\n            Time: 0,\n            Points: false,\n            live: false\n        };\n        index_1.userdata.customchannel.forEach(drop => {\n            if (drop.TTVLink === 'https://www.twitch.tv/' + ChannelLogin) {\n                currentdrop = drop;\n            }\n        });\n        return currentdrop;\n    });\n}\n"],
  "mappings": "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",
  "names": []
}
