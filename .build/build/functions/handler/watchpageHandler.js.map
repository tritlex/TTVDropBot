{
  "version": 3,
  "sources": ["../../../../build/functions/handler/watchpageHandler.js"],
  "sourcesContent": ["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendMinuteWatched = exports.WatchingEventHandlerStop = exports.WatchingEventHandlerStart = void 0;\nconst getTwitchDrops_1 = require(\"../get/getTwitchDrops\");\nconst index_1 = require(\"../../index\");\nconst liveCheck_1 = require(\"../../Checks/liveCheck\");\nconst winston_1 = __importDefault(require(\"winston\"));\nconst getCurrentDrop_1 = require(\"../get/getCurrentDrop\");\nconst util_1 = require(\"../../utils/util\");\nconst dateCheck_1 = require(\"../../Checks/dateCheck\");\nconst axios_1 = __importDefault(require(\"axios\"));\nconst claimCheck_1 = require(\"../../Checks/claimCheck\");\nconst chalk_1 = __importDefault(require(\"chalk\"));\nconst samepercentCheck_1 = require(\"../../Checks/samepercentCheck\");\nconst pointsCheck_1 = require(\"../../Checks/pointsCheck\");\nconst TwitchGQL = require(\"@zaarrg/twitch-gql-ttvdropbot\").Init(index_1.userdata.clientid);\nconst { Base64 } = require('js-base64');\nlet status = 'stopped';\nfunction WatchingEventHandlerStart(DropcurrentlyWatching) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (status === 'stopped') {\n            yield (0, getTwitchDrops_1.getTwitchDrops)(index_1.userdata.game, false);\n            yield (0, liveCheck_1.allOfflineCheck)();\n            yield (0, liveCheck_1.liveCheck)(DropcurrentlyWatching, false);\n            yield sendMinuteWatched(DropcurrentlyWatching.toString().toLowerCase());\n            status = 'running';\n            yield loop(DropcurrentlyWatching);\n        }\n        else if (status === 'running') {\n            yield loop(DropcurrentlyWatching);\n        }\n    });\n}\nexports.WatchingEventHandlerStart = WatchingEventHandlerStart;\nfunction loop(DropcurrentlyWatching) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield (0, util_1.delay)(index_1.userdata.settings.ProgressCheckInterval);\n        if (index_1.userdata.settings.debug)\n            winston_1.default.info('UserDATA %o', JSON.stringify(index_1.userdata, null, 2));\n        //Update Drop Data\n        yield (0, getTwitchDrops_1.getTwitchDrops)(index_1.userdata.game, false);\n        yield (0, liveCheck_1.allOfflineCheck)();\n        //Get the right Drop\n        if (status === 'running') {\n            yield (0, getCurrentDrop_1.getCurrentDrop)().then((CurrentDrop) => __awaiter(this, void 0, void 0, function* () {\n                if (index_1.userdata.settings.debug)\n                    winston_1.default.info('CurrentDrop %o', JSON.stringify(CurrentDrop, null, 2));\n                //Switch DropcurrentlyWatching to a live one if current offline and new live ch available\n                if (!CurrentDrop.foundlivech.includes(DropcurrentlyWatching) && CurrentDrop.foundlivech.length > 0) {\n                    DropcurrentlyWatching = CurrentDrop.foundlivech[0];\n                    winston_1.default.info(chalk_1.default.gray(\"Switched current Channel to \" + chalk_1.default.white(DropcurrentlyWatching) + \"...\"));\n                    winston_1.default.silly(\" \");\n                }\n                yield (0, liveCheck_1.liveCheck)(DropcurrentlyWatching, false);\n                yield (0, claimCheck_1.claimableCheck)(CurrentDrop, index_1.userdata.settings.AutoClaim, false);\n                yield (0, dateCheck_1.dateCheck)(CurrentDrop, false);\n                yield (0, samepercentCheck_1.SamePercentCheck)(CurrentDrop);\n                yield (0, pointsCheck_1.pointsCheck)(DropcurrentlyWatching).then(points => {\n                    winston_1.default.info(chalk_1.default.gray('Watching ' + chalk_1.default.white(DropcurrentlyWatching) + ' | Points: ' + chalk_1.default.white(points.toString())), { event: \"progress\" });\n                });\n                for (const [i, drop] of CurrentDrop.timebasedrop.entries()) {\n                    let dropslenght = CurrentDrop.timebasedrop.length;\n                    winston_1.default.info(chalk_1.default.gray(\"Current Progress: \") + chalk_1.default.white((0, util_1.minutestoPercent)(drop.self.currentMinutesWatched, drop.requiredMinutesWatched) + \" %\") + chalk_1.default.gray(\" | Watched \" + chalk_1.default.white(drop.self.currentMinutesWatched + \"/\" + drop.requiredMinutesWatched) + \" Minutes\" + chalk_1.default.gray(\" | Drop \") + chalk_1.default.white((i + 1) + \"/\" + dropslenght) + chalk_1.default.gray(\" | Status \") + chalk_1.default.white(drop.self.status) + chalk_1.default.gray(\" | isClaimed \") + chalk_1.default.white(drop.self.isClaimed)), { event: \"progress\" });\n                }\n                winston_1.default.silly(' ', { event: \"progressEnd\" });\n                yield sendMinuteWatched(DropcurrentlyWatching);\n            }));\n            if (index_1.userdata.settings.debug)\n                winston_1.default.info('Interval Executed');\n            if (status === 'running')\n                yield loop(DropcurrentlyWatching);\n        }\n    });\n}\nfunction WatchingEventHandlerStop() {\n    return __awaiter(this, void 0, void 0, function* () {\n        status = 'stopped';\n    });\n}\nexports.WatchingEventHandlerStop = WatchingEventHandlerStop;\nfunction sendMinuteWatched(ChannelLogin) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let opts = {\n            \"channelLogin\": ChannelLogin\n        };\n        let Stream = yield TwitchGQL._SendQuery(\"UseLive\", opts, '639d5f11bfb8bf3053b424d9ef650d04c4ebb7d94711d644afb08fe9a0fad5d9', 'OAuth ' + index_1.userdata.auth_token, true);\n        let channleid = Stream[0].data.user.id;\n        let broadcastid = Stream[0].data.user.stream.id;\n        const gethtml = yield axios_1.default.get('https://www.twitch.tv/' + ChannelLogin, {\n            headers: {\n                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:98.0) Gecko/20100101 Firefox/98.0',\n                'encoding': 'utf8',\n                'Client-Id': index_1.userdata.clientid,\n                'Authorization': 'OAuth ' + index_1.userdata.auth_token,\n            },\n            raxConfig: util_1.retryConfig\n        }).catch(err => {\n            winston_1.default.error(\"ERROR: Could not load https://www.twitch.tv... Check your connection...\");\n            throw err;\n        });\n        let SettingsJSReg = new RegExp('https://static\\.twitchcdn\\.net/config/settings\\.[0-9a-f]{32}\\.js');\n        let parsehtml = SettingsJSReg.exec(gethtml.data.toString());\n        if (parsehtml[0] === null)\n            winston_1.default.error(\"Error while parsing Settings Url...\");\n        const getSettingsJS = yield axios_1.default.get(parsehtml[0].toString(), { raxConfig: util_1.retryConfig }).catch(err => {\n            winston_1.default.error(\"ERROR: Could not load your twitch settings... Check your connection...\");\n            throw err;\n        });\n        let SpadeReg = new RegExp('(https://video-edge-[.\\\\w\\\\-/]+\\\\.ts)');\n        let parseJS = SpadeReg.exec(getSettingsJS.data.toString());\n        if (parseJS[0] === null)\n            winston_1.default.error(\"Error while parsing Spade URL...\");\n        let payload = [\n            {\n                \"event\": \"minute-watched\",\n                \"properties\": {\n                    \"channel_id\": channleid.toString(),\n                    \"broadcast_id\": broadcastid.toString(),\n                    \"player\": \"site\",\n                    \"user_id\": index_1.userdata.userid.toString(),\n                }\n            }\n        ];\n        let json_event = JSON.stringify(payload);\n        let b64 = Base64.encode(json_event);\n        let config = {\n            headers: {\n                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:98.0) Gecko/20100101 Firefox/98.0',\n                \"Content-type\": \"text/plain\",\n            },\n            raxConfig: util_1.retryConfig\n        };\n        const post = yield axios_1.default.post(parseJS[0].toString(), b64, config).catch(err => {\n            winston_1.default.error(\"ERROR: Could not send minute watching event...\");\n            throw err;\n        });\n        if (index_1.userdata.settings.debug) {\n            winston_1.default.info('minute sent!!' + (post === null || post === void 0 ? void 0 : post.status));\n        }\n    });\n}\nexports.sendMinuteWatched = sendMinuteWatched;\n"],
  "mappings": "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",
  "names": []
}
