{
  "version": 3,
  "sources": ["../../../../build/functions/handler/webHookHandler.js"],
  "sourcesContent": ["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendWebhook = exports.webhookHandler = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst index_1 = require(\"../../index\");\n//events: requestRetry, claim, newDrop, offline, newGame, get, getResult, progress, start, progressEnd, error, warn, info\nlet logqueue = [];\nfunction webhookHandler(log) {\n    return __awaiter(this, void 0, void 0, function* () {\n        //Remove Color Codes\n        log.message = log.message.replace(/[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g, '').replace(/,/g, ' ');\n        if (!log.event) {\n            log[\"event\"] = log.level;\n        }\n        if (log.event === \"progressEnd\" || log.message !== \" \") {\n            yield webhooklogic(log);\n        }\n    });\n}\nexports.webhookHandler = webhookHandler;\nfunction webhooklogic(log) {\n    return __awaiter(this, void 0, void 0, function* () {\n        logqueue.push(log);\n        if ((logqueue.length > 1 && logqueue[logqueue.length - 1].event !== logqueue[logqueue.length - 2].event)) {\n            if (index_1.userdata.settings.WebHookEvents.length > 0 && index_1.userdata.settings.WebHookEvents.includes(logqueue[logqueue.length - 2].event.toLowerCase())) {\n                yield clearqueueandsend(log);\n            }\n            else if (index_1.userdata.settings.WebHookEvents.length === 0) {\n                yield clearqueueandsend(log);\n            }\n            else {\n                logqueue.splice(0, logqueue.length - 1);\n            }\n        }\n    });\n}\nfunction clearqueueandsend(log) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let arraytosend = logqueue.splice(0, logqueue.length - 1);\n        let stringarray = [];\n        arraytosend.forEach(log => stringarray.push(log.message));\n        yield sendWebhook(stringarray, arraytosend[0].event.toString(), index_1.userdata.settings.WebHookURL, 8933352).then(status => {\n            if (!status) {\n                throw \"Error while trying to send the discord webhook\";\n            }\n        });\n        if (log.event === \"progressEnd\")\n            logqueue = [];\n    });\n}\n//\nfunction sendWebhook(msg, event, webhookurl, color) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let content = \"\";\n        let currentDrop = \"\";\n        if (index_1.userdata.startDrop !== undefined) {\n            currentDrop = index_1.userdata.startDrop === \"\" ? \"none\" : index_1.userdata.startDrop.toString();\n        }\n        else {\n            currentDrop = \"none\";\n        }\n        if (event === \"progress\") {\n            let convertedProgress = yield convertProgressString(msg);\n            content = convertedProgress.toString().split(\",\").join(\"\\n\");\n        }\n        else {\n            content = msg.toString().split(\",\").join(\"\\n\\n\");\n        }\n        let config = {\n            headers: {\n                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:98.0) Gecko/20100101 Firefox/98.0',\n                'Content-type': 'application/json'\n            }\n        };\n        let embed = {\n            username: \"TTVDropBot\",\n            avatar_url: \"https://i.imgur.com/2WtgNe4.png\",\n            embeds: [\n                {\n                    \"author\": {\n                        \"name\": \"TTVDropBot\uD83D\uDCDC\",\n                        \"url\": \"https://github.com/PockySweet/TTVDropBot-Fix\",\n                        \"icon_url\": \"https://i.imgur.com/2WtgNe4.png\"\n                    },\n                    \"fields\": [\n                        {\n                            \"name\": \"Event\",\n                            \"value\": event,\n                            \"inline\": true\n                        },\n                        {\n                            \"name\": \"Current Drop\",\n                            \"value\": currentDrop,\n                            \"inline\": true\n                        },\n                    ],\n                    \"color\": color,\n                    \"description\": \"```\" + content + \"```\",\n                    \"footer\": {\n                        \"text\": \"Send directly from TTVDropbot made by Zarg!\"\n                    },\n                    \"timestamp\": new Date()\n                }\n            ]\n        };\n        return yield axios_1.default.post(webhookurl, JSON.stringify(embed), config).then(() => { return true; }).catch(e => {\n            return false;\n        });\n    });\n}\nexports.sendWebhook = sendWebhook;\nfunction convertProgressString(stringarray) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let finallog = [];\n        stringarray.forEach(log => {\n            let splitted = log.split(\" | \");\n            let firsttwo = splitted.slice(0, 2);\n            let rest = splitted.slice(2, splitted.length);\n            if (rest.length === 0) {\n                finallog.push(firsttwo.toString().replace(/,/g, ' | ') + \"\\n\");\n            }\n            else {\n                if (firsttwo.length > 0)\n                    finallog.push(firsttwo.toString().replace(/,/g, ' | '));\n                if (rest.length > 0)\n                    finallog.push(rest.toString().replace(/,/g, ' | ') + \"\\n\");\n            }\n        });\n        return finallog;\n    });\n}\n"],
  "mappings": "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",
  "names": []
}
