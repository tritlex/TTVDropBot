{
  "version": 3,
  "sources": ["../../../../build/functions/get/getArgs.js"],
  "sourcesContent": ["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matchArgs = exports.setArgs = void 0;\nconst index_1 = require(\"../../index\");\nconst yargs_1 = __importDefault(require(\"yargs\"));\nconst helpers_1 = require(\"yargs/helpers\");\nconst index_2 = require(\"../../index\");\nfunction setArgs() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield (0, yargs_1.default)((0, helpers_1.hideBin)(process.argv))\n            .scriptName(\"./TTVDropBot or index.js\")\n            .usage(\"Usage: $0 --arg...\")\n            .version(index_1.version)\n            .option(\"chrome\", {\n            alias: \"c\",\n            describe: \"The path to your Chrome executable.\",\n            type: \"string\",\n            nargs: 1,\n        })\n            .example(\"--chrome C:path:to:chrome.exe\", \"Sets your chrome path.\")\n            .option(\"userdata\", {\n            alias: \"u\",\n            describe: \"The path to your userdata folder location.\",\n            type: \"string\",\n            nargs: 1,\n        })\n            .example(\"--userdata C:path:to:userdata-folder\", \"Sets your userdata path.\")\n            .option(\"webhook\", {\n            alias: \"wh\",\n            describe: \"The Discord Webhook URL.\",\n            type: \"string\",\n            nargs: 1,\n        })\n            .example(\"--webhook https:discord.com:api:webh....\", \"Sets your webhook url.\")\n            .option(\"webhookevents\", {\n            describe: \"Set what events should be send via webhook.\",\n            type: \"array\"\n        })\n            .example(\"--webhookevents requestretry claim newdrop offline newgame get getresult progress start error warn info\", \"Defaults to the events in this example provided.\")\n            .option(\"interval\", {\n            alias: \"i\",\n            describe: \"The progress interval in ms.\",\n            type: \"number\",\n            nargs: 1,\n        })\n            .example(\"--interval 30000\", \"Sets the progress interval to 30s.\")\n            .option(\"retryinterval\", {\n            alias: \"retry\",\n            describe: \"The retry interval in ms.\",\n            type: \"number\",\n            nargs: 1,\n        })\n            .example(\"--retryinterval 30000\", \"Sets the retry interval to 30s.\")\n            .option(\"games\", {\n            alias: \"g\",\n            describe: \"The Games the bot should watch.\",\n            type: \"array\"\n        })\n            .example(\"--games Rust Krunker 'Elite: Dangerous' \", \"Sets the Prioritylist to Rust, Krunker and Elite: Dangerous.\")\n            .option(\"token\", {\n            describe: \"Your twitch auth_token.\",\n            type: \"string\"\n        })\n            .example(\"--token yourkindalongtoken \", \"Sets the your current twitch auth token, overwriting any in twitch-session.json.\")\n            .option(\"showtoken\", {\n            describe: \"Show your auth_token after login.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n            .option(\"debug\", {\n            alias: \"d\",\n            describe: \"Enable Debug logging.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n            .option(\"displayless\", {\n            alias: \"dl\",\n            describe: \"Enable Displayless mode.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n            .option(\"forcecustomchannel\", {\n            describe: \"Force Custom Channels. Only useful for display-less mode.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n            .option(\"waitforchannels\", {\n            alias: \"waitonline\",\n            describe: \"Disable waitforchannels, forcing the bot to not wait for other channels with drops instead switch the game.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n            .option(\"autoclaim\", {\n            describe: \"Enable autoclaim for drops.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n            .option(\"autopoints\", {\n            describe: \"Enable auto points for channels.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n            .option(\"log\", {\n            describe: \"Enable logging to file.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n            .option(\"usekeepalive\", {\n            describe: \"Enable Express KeepAlive.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n            .option(\"tray\", {\n            describe: \"Start app in the tray.\",\n            type: \"boolean\",\n            nargs: 0,\n        })\n            .describe(\"help\", \"Show help.\") // Override --help usage message.\n            .describe(\"version\", \"Show version number.\") // Override --version usage message.\n            .epilog(\"TTVDropBot made possible by Zarg\");\n    });\n}\nexports.setArgs = setArgs;\nfunction matchArgs() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const args = yargs_1.default.argv;\n        if (args.chrome !== undefined)\n            index_2.userdata.settings.Chromeexe = args.chrome;\n        if (args.userdata !== undefined)\n            index_2.userdata.settings.UserDataPath = args.userdata;\n        if (args.webhook !== undefined)\n            index_2.userdata.settings.WebHookURL = args.webhook;\n        if (args.interval !== undefined)\n            index_2.userdata.settings.ProgressCheckInterval = args.interval;\n        if (args.games !== undefined)\n            index_2.userdata.settings.Prioritylist = args.games;\n        if (args.debug !== undefined)\n            index_2.userdata.settings.debug = args.debug;\n        if (args.displayless !== undefined)\n            index_2.userdata.settings.displayless = args.displayless;\n        if (args.forcecustomchannel !== undefined)\n            index_2.userdata.settings.ForceCustomChannel = args.forcecustomchannel;\n        if (args.waitforchannels !== undefined)\n            index_2.userdata.settings.WaitforChannels = args.waitforchannels;\n        if (args.autoclaim !== undefined)\n            index_2.userdata.settings.AutoClaim = args.autoclaim;\n        if (args.autopoints !== undefined)\n            index_2.userdata.settings.AutoPoints = args.autopoints;\n        if (args.log !== undefined)\n            index_2.userdata.settings.LogToFile = args.log;\n        if (args.usekeepalive !== undefined)\n            index_2.userdata.settings.UseKeepAlive = args.usekeepalive;\n        if (args.retryinterval !== undefined)\n            index_2.userdata.settings.RetryDelay = args.retryinterval;\n        if (args.webhookevents !== undefined)\n            index_2.userdata.settings.WebHookEvents = args.webhookevents;\n        if (args.showtoken !== undefined)\n            index_2.userdata.showtoken = args.showtoken;\n        if (args.token !== undefined)\n            index_2.userdata.auth_token = args.token;\n        if (process.env.ttvdropbot_chrome !== undefined)\n            index_2.userdata.settings.Chromeexe = process.env.ttvdropbot_chrome;\n        if (process.env.ttvdropbot_userdata !== undefined)\n            index_2.userdata.settings.UserDataPath = process.env.ttvdropbot_userdata;\n        if (process.env.ttvdropbot_webhook !== undefined)\n            index_2.userdata.settings.WebHookURL = process.env.ttvdropbot_webhook;\n        if (process.env.ttvdropbot_interval !== undefined)\n            index_2.userdata.settings.ProgressCheckInterval = parseInt(process.env.ttvdropbot_interval);\n        if (process.env.ttvdropbot_games !== undefined) {\n            let stringarray = process.env.ttvdropbot_games.split(' ');\n            let replacedarray = stringarray.map(game => game.replace(/_/g, ' '));\n            index_2.userdata.settings.Prioritylist = replacedarray;\n        }\n        if (process.env.ttvdropbot_forcecustomchannel !== undefined)\n            index_2.userdata.settings.ForceCustomChannel = JSON.parse(process.env.ttvdropbot_forcecustomchannel);\n        if (process.env.ttvdropbot_debug !== undefined)\n            index_2.userdata.settings.debug = JSON.parse(process.env.ttvdropbot_debug);\n        if (process.env.ttvdropbot_displayless !== undefined)\n            index_2.userdata.settings.displayless = JSON.parse(process.env.ttvdropbot_displayless);\n        if (process.env.ttvdropbot_waitforchannels !== undefined)\n            index_2.userdata.settings.WaitforChannels = JSON.parse(process.env.ttvdropbot_waitforchannels);\n        if (process.env.ttvdropbot_autoclaim !== undefined)\n            index_2.userdata.settings.AutoClaim = JSON.parse(process.env.ttvdropbot_autoclaim);\n        if (process.env.ttvdropbot_autopoints !== undefined)\n            index_2.userdata.settings.AutoPoints = JSON.parse(process.env.ttvdropbot_autopoints);\n        if (process.env.ttvdropbot_log !== undefined)\n            index_2.userdata.settings.LogToFile = JSON.parse(process.env.ttvdropbot_log);\n        if (process.env.ttvdropbot_usekeepalive !== undefined)\n            index_2.userdata.settings.UseKeepAlive = JSON.parse(process.env.ttvdropbot_usekeepalive);\n        if (process.env.ttvdropbot_retryinterval !== undefined)\n            index_2.userdata.settings.RetryDelay = parseInt(process.env.ttvdropbot_retryinterval);\n        if (process.env.ttvdropbot_webhookevents !== undefined)\n            index_2.userdata.settings.WebHookEvents = process.env.ttvdropbot_webhookevents.split(' ');\n        if (process.env.ttvdropbot_showtoken !== undefined)\n            index_2.userdata.showtoken = JSON.parse(process.env.ttvdropbot_showtoken);\n        if (process.env.ttvdropbot_token !== undefined)\n            index_2.userdata.auth_token = process.env.ttvdropbot_token;\n    });\n}\nexports.matchArgs = matchArgs;\n"],
  "mappings": "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",
  "names": []
}
