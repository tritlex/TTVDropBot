{
  "version": 3,
  "sources": ["../../../build/functions/findLiveChannel.js"],
  "sourcesContent": ["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findLiveChannel = void 0;\nconst index_1 = require(\"../index\");\nconst TwitchGQL = require(\"@zaarrg/twitch-gql-ttvdropbot\").Init();\nfunction findLiveChannel(allowedChannels) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let foundlivechannel = [];\n        if (allowedChannels !== null) {\n            AllowedCHloop: for (const AllowedChannelElement of allowedChannels) {\n                if (yield TwitchGQL.GetLiveStatus(AllowedChannelElement.name)) {\n                    let user = yield TwitchGQL.GetUser(AllowedChannelElement.name);\n                    if (user.data.user.stream === null) {\n                        return foundlivechannel;\n                    }\n                    let game = user.data.user.stream.game.name.toLowerCase();\n                    if (game === index_1.userdata.game.toLowerCase()) {\n                        let TagList = yield TwitchGQL._SendQuery(\"RealtimeStreamTagList\", { channelLogin: AllowedChannelElement.name }, '9d952e4aacd4f8bb9f159bd4d5886d72c398007249a8b09e604a651fc2f8ac17', 'OAuth ' + index_1.userdata.auth_token, true, {}, true);\n                        if (TagList[0].data.user.stream === null) {\n                            return foundlivechannel;\n                        }\n                        let Tags = TagList[0].data.user.stream.tags;\n                        for (const Tagelement of Tags) {\n                            if (Tagelement.id === 'c2542d6d-cd10-4532-919b-3d19f30a768b') {\n                                foundlivechannel.push(AllowedChannelElement.name);\n                                break AllowedCHloop;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            //Find Drop Channel via Tag\n            let opts = {\n                limit: 50,\n                options: {\n                    sort: \"VIEWER_COUNT\",\n                    tags: [\"c2542d6d-cd10-4532-919b-3d19f30a768b\"]\n                },\n                sortTypeIsRecency: false\n            };\n            const directorypagegame = yield TwitchGQL.GetDirectoryPageGame(index_1.userdata.game, opts);\n            if (directorypagegame[0].data.game.streams === null) {\n                return foundlivechannel;\n            }\n            if (directorypagegame[0].data.game.streams.edges.length > 0) {\n                foundlivechannel.push(directorypagegame[0].data.game.streams.edges[0].node.broadcaster.login);\n            }\n        }\n        return foundlivechannel;\n    });\n}\nexports.findLiveChannel = findLiveChannel;\n"],
  "mappings": ";AACA,IAAI,YAAa,WAAQ,QAAK,aAAc,SAAU,SAAS,YAAY,GAAG,WAAW;AACrF,iBAAe,OAAO;AAAE,WAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,SAAS;AAAE,cAAQ;AAAA;AAAA;AAC/F,SAAO,IAAK,MAAM,KAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,uBAAmB,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK;AAAA,eAAkB,GAAP;AAAY,eAAO;AAAA;AAAA;AACpF,sBAAkB,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,SAAS;AAAA,eAAkB,GAAP;AAAY,eAAO;AAAA;AAAA;AACvF,kBAAc,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,SAAS,MAAM,OAAO,OAAO,KAAK,WAAW;AAAA;AAClG,SAAM,aAAY,UAAU,MAAM,SAAS,cAAc,KAAK;AAAA;AAAA;AAGtE,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO;AACtD,QAAQ,kBAAkB;AAC1B,MAAM,UAAU,QAAQ;AACxB,MAAM,YAAY,QAAQ,iCAAiC;AAC3D,yBAAyB,iBAAiB;AACtC,SAAO,UAAU,MAAM,QAAQ,QAAQ,aAAa;AAChD,QAAI,mBAAmB;AACvB,QAAI,oBAAoB,MAAM;AAC1B;AAAe,mBAAW,yBAAyB,iBAAiB;AAChE,cAAI,MAAM,UAAU,cAAc,sBAAsB,OAAO;AAC3D,gBAAI,OAAO,MAAM,UAAU,QAAQ,sBAAsB;AACzD,gBAAI,KAAK,KAAK,KAAK,WAAW,MAAM;AAChC,qBAAO;AAAA;AAEX,gBAAI,OAAO,KAAK,KAAK,KAAK,OAAO,KAAK,KAAK;AAC3C,gBAAI,SAAS,QAAQ,SAAS,KAAK,eAAe;AAC9C,kBAAI,UAAU,MAAM,UAAU,WAAW,yBAAyB,EAAE,cAAc,sBAAsB,QAAQ,oEAAoE,WAAW,QAAQ,SAAS,YAAY,MAAM,IAAI;AACtO,kBAAI,QAAQ,GAAG,KAAK,KAAK,WAAW,MAAM;AACtC,uBAAO;AAAA;AAEX,kBAAI,OAAO,QAAQ,GAAG,KAAK,KAAK,OAAO;AACvC,yBAAW,cAAc,MAAM;AAC3B,oBAAI,WAAW,OAAO,wCAAwC;AAC1D,mCAAiB,KAAK,sBAAsB;AAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOnB;AAED,UAAI,OAAO;AAAA,QACP,OAAO;AAAA,QACP,SAAS;AAAA,UACL,MAAM;AAAA,UACN,MAAM,CAAC;AAAA;AAAA,QAEX,mBAAmB;AAAA;AAEvB,YAAM,oBAAoB,MAAM,UAAU,qBAAqB,QAAQ,SAAS,MAAM;AACtF,UAAI,kBAAkB,GAAG,KAAK,KAAK,YAAY,MAAM;AACjD,eAAO;AAAA;AAEX,UAAI,kBAAkB,GAAG,KAAK,KAAK,QAAQ,MAAM,SAAS,GAAG;AACzD,yBAAiB,KAAK,kBAAkB,GAAG,KAAK,KAAK,QAAQ,MAAM,GAAG,KAAK,YAAY;AAAA;AAAA;AAG/F,WAAO;AAAA;AAAA;AAGf,QAAQ,kBAAkB;",
  "names": []
}
