{
  "version": 3,
  "sources": ["../../../../build/functions/logger/logger.js"],
  "sourcesContent": ["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst webHookHandler_1 = require(\"../handler/webHookHandler\");\nconst index_1 = require(\"../../index\");\nconst fs = require(\"fs\");\nconst winston = require('winston');\nconst { format } = require(\"winston\");\nconst { printf } = format;\nfunction default_1() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const fileFormat = printf((log) => { return `${log.timestamp}: ${log.message}`; });\n        const consoleFormat = printf((log) => { return log.message; });\n        // Logger configuration\n        process.on('unhandledRejection', (reason, promise) => __awaiter(this, void 0, void 0, function* () {\n            winston.error(\"Unhandled Rejection at: %o\", promise);\n            winston.error(\"Unhandled Rejection Reason: \" + reason);\n            if (index_1.userdata.settings.WebHookURL !== \"\") {\n                yield (0, webHookHandler_1.sendWebhook)([reason, \"More Details can be found in the error Log...\", \"Closing Bot...\"], \"ERROR\", index_1.userdata.settings.WebHookURL, 16711680).then((request) => {\n                    if (!request) {\n                        winston.info('Could not send Webhook with ERROR: Closing Bot...');\n                        process.exit(21);\n                    }\n                    else {\n                        process.exit(21);\n                    }\n                });\n            }\n            else {\n                process.exit(21);\n            }\n        }));\n        try {\n            yield createConsoleLogger(consoleFormat);\n            if (fs.existsSync('./settings.json')) {\n                let settingsfile = fs.readFileSync('./settings.json', 'utf8');\n                let options = yield JSON.parse(settingsfile);\n                if (options.LogToFile) {\n                    yield createFilelogger(fileFormat);\n                }\n            }\n        }\n        catch (e) {\n            yield createConsoleLogger(consoleFormat);\n            yield createFilelogger(fileFormat);\n            winston.error('ERROR');\n            throw 'Invalid/Corrupted JSON file...';\n        }\n        return true;\n    });\n}\nexports.default = default_1;\nfunction createConsoleLogger(consoleFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const consoleLogger = new winston.transports.Console({\n            level: 'silly',\n            handleExceptions: true,\n            RejectionHandler: true,\n            format: format.combine(format.prettyPrint(), format.splat(), consoleFormat)\n        });\n        winston.add(consoleLogger);\n        consoleLogger.on('logged', function (log) {\n            return __awaiter(this, void 0, void 0, function* () { if (index_1.userdata.settings.WebHookURL !== \"\")\n                yield (0, webHookHandler_1.webhookHandler)(log); });\n        });\n    });\n}\nfunction createFilelogger(fileFormat) {\n    return __awaiter(this, void 0, void 0, function* () {\n        winston.add(new winston.transports.File({\n            filename: './logs/TTVDropBot-out.log',\n            level: 'info',\n            handleExceptions: true,\n            RejectionHandler: true,\n            maxsize: \"20m\",\n            maxFiles: 5,\n            timestamp: true,\n            format: format.combine(format.uncolorize(), format.splat(), format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }), fileFormat)\n        }));\n        winston.add(new winston.transports.File({\n            filename: './logs/TTVDropBot-error.log',\n            level: 'error',\n            handleExceptions: true,\n            RejectionHandler: true,\n            maxsize: \"20m\",\n            maxFiles: 5,\n            timestamp: true,\n            format: format.combine(format.uncolorize(), format.splat(), format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }), fileFormat)\n        }));\n    });\n}\n"],
  "mappings": "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",
  "names": []
}
