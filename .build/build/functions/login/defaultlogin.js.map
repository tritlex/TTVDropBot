{
  "version": 3,
  "sources": ["../../../../build/functions/login/defaultlogin.js"],
  "sourcesContent": ["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.login = void 0;\nconst winston_1 = __importDefault(require(\"winston\"));\nconst chalk_1 = __importDefault(require(\"chalk\"));\nconst index_1 = require(\"../../index\");\nconst getSettings_1 = require(\"../get/getSettings\");\nconst loginPage_1 = require(\"../../Pages/loginPage\");\nconst fs_1 = __importDefault(require(\"fs\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst util_1 = require(\"../../utils/util\");\nconst inquirer = require(\"inquirer\");\nlet pw = '';\nlet nm = '';\nfunction login() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!index_1.userdata.auth_token && !fs_1.default.existsSync('./twitch-session.json')) {\n            if (!index_1.userdata.settings.displayless) {\n                winston_1.default.silly(\" \");\n                winston_1.default.info(chalk_1.default.gray('Please Login into your Twitch Account...'));\n                winston_1.default.silly(\" \");\n                let options = [\"Directly via Command Line\", \"Via Browser\"];\n                yield inquirer\n                    .prompt([\n                    {\n                        type: 'list',\n                        name: 'loginoption',\n                        message: 'How would you like to Login into your account?',\n                        choices: options,\n                    },\n                ])\n                    .then((answer) => __awaiter(this, void 0, void 0, function* () {\n                    if (answer.loginoption === 'Via Browser') {\n                        yield browserlogin();\n                    }\n                    else {\n                        yield directlogin('', '');\n                        pw = '';\n                        nm = '';\n                    }\n                }));\n            }\n            else {\n                winston_1.default.error('ERROR');\n                throw 'No twitch-session.json found to use in displayless mode...';\n            }\n        }\n        else {\n            yield getTwitchUserDetails();\n            winston_1.default.silly(\" \");\n            winston_1.default.info(chalk_1.default.gray('Found a twitch-session... No need to login...'));\n            winston_1.default.silly(\" \");\n        }\n    });\n}\nexports.login = login;\nfunction askforacccountdetails() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (pw === '' || nm === '') {\n            yield inquirer\n                .prompt([\n                {\n                    type: 'input',\n                    name: 'username',\n                    message: 'What is your Username?'\n                },\n                {\n                    type: 'password',\n                    name: 'password',\n                    message: 'What is your Password?'\n                }\n            ])\n                .then((Answer) => __awaiter(this, void 0, void 0, function* () {\n                pw = Answer.password;\n                nm = Answer.username;\n            }));\n            return { pw: pw, nm: nm };\n        }\n        return { pw: pw, nm: nm };\n    });\n}\nfunction askforauthcode(errorcode) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let message = '';\n        let input = '';\n        if (errorcode === 3011)\n            message = 'What is your 2FA token?';\n        if (errorcode === 3022)\n            message = 'What is your Email code?';\n        yield inquirer\n            .prompt([\n            {\n                type: 'input',\n                name: 'code',\n                message: message\n            }\n        ])\n            .then((Answer) => __awaiter(this, void 0, void 0, function* () {\n            input = Answer.code;\n        }));\n        return input;\n    });\n}\nfunction directlogin(emailcode, facode, captcha_proof = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let attempt = 0;\n        const details = yield askforacccountdetails();\n        let config = {\n            headers: {\n                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:98.0) Gecko/20100101 Firefox/98.0',\n                \"Content-type\": \"text/plain\",\n            },\n            raxConfig: util_1.retryConfig\n        };\n        let body = Object.assign({ \"client_id\": \"kimne78kx3ncx6brgo4mv6wki5h1ko\", \"undelete_user\": false, \"remember_me\": true, \"username\": details.nm, \"password\": details.pw }, captcha_proof);\n        if (emailcode !== '') {\n            Object.assign(body, { \"twitchguard_code\": emailcode });\n        }\n        else if (facode !== '') {\n            Object.assign(body, { \"authy_token\": facode });\n        }\n        yield axios_1.default.post('https://passport.twitch.tv/login', body, config)\n            .then(function (response) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let response_data = response.data;\n                if (index_1.userdata.settings.debug)\n                    winston_1.default.info('loginresponse %o', JSON.stringify(response_data, null, 2));\n                winston_1.default.info(chalk_1.default.green(\"Successfully Logged in...\"));\n                let authcookie = [{\n                        \"name\": \"auth-token\",\n                        \"value\": response_data.access_token,\n                    }];\n                yield fs_1.default.promises.writeFile('twitch-session.json', JSON.stringify(authcookie, null, 2)).then(function () {\n                    winston_1.default.silly(\" \");\n                    winston_1.default.info(chalk_1.default.green(\"Successfully Saved Cookies...\"));\n                    winston_1.default.silly(\" \");\n                }).catch(err => { throw err; });\n                yield getTwitchUserDetails();\n            });\n        })\n            .catch(function (error) {\n            return __awaiter(this, void 0, void 0, function* () {\n                winston_1.default.silly(\" \");\n                winston_1.default.error(chalk_1.default.yellow('Something went wrong...'));\n                let errorcode = 0;\n                let capta = {};\n                try {\n                    if (error.response.data.captcha_proof)\n                        capta = { captcha_proof: error.response.data.captcha_proof };\n                }\n                catch (e) { }\n                try {\n                    errorcode = error.response.data.error_code;\n                }\n                catch (e) { }\n                if (attempt === 3) {\n                    winston_1.default.info(chalk_1.default.gray('Failed 3 times to login closing...'));\n                    throw 'Failed to Login...';\n                }\n                if (errorcode === 1000) {\n                    nm = '';\n                    pw = '';\n                    winston_1.default.info(chalk_1.default.gray('Login failed due to CAPTCHA...'));\n                    winston_1.default.silly(\" \");\n                    winston_1.default.info(chalk_1.default.gray('Your login attempt was denied by CAPTCHA. Please wait 12h or login via the browser...'));\n                    winston_1.default.silly(\" \");\n                    winston_1.default.info(chalk_1.default.gray('Redirecting to browser login...'));\n                    yield browserlogin();\n                }\n                else if (errorcode === 3001 || errorcode === 2005) {\n                    attempt++;\n                    nm = '';\n                    pw = '';\n                    winston_1.default.info(chalk_1.default.gray(\"Login failed due to incorrect username or password...\"));\n                    yield directlogin('', '', capta);\n                }\n                else if (errorcode === 3012) {\n                    attempt++;\n                    winston_1.default.info(chalk_1.default.gray(\"Invaild 2FA...\"));\n                    winston_1.default.silly(\" \");\n                    let code = yield askforauthcode(3011);\n                    yield directlogin('', code, capta);\n                }\n                else if (errorcode === 3023) {\n                    attempt++;\n                    winston_1.default.info(chalk_1.default.gray(\"Invaild Email Code...\"));\n                    winston_1.default.silly(\" \");\n                    let code = yield askforauthcode(3022);\n                    yield directlogin('', code, capta);\n                }\n                if (errorcode === 3011) {\n                    winston_1.default.info(chalk_1.default.gray('2FA token required...\"'));\n                    winston_1.default.silly(\" \");\n                    let code = yield askforauthcode(3011);\n                    yield directlogin('', code, capta);\n                }\n                else if (errorcode === 3022) {\n                    winston_1.default.info(chalk_1.default.gray('Email code required...'));\n                    winston_1.default.silly(\" \");\n                    let code = yield askforauthcode(3022);\n                    yield directlogin(code, '', capta);\n                }\n                else if (!fs_1.default.existsSync('./twitch-session.json')) {\n                    attempt++;\n                    nm = '';\n                    pw = '';\n                    winston_1.default.info(chalk_1.default.gray('Login failed for an unknown reason...'));\n                    winston_1.default.info(chalk_1.default.gray('The Reason is probably:'));\n                    winston_1.default.info(chalk_1.default.yellow('Error Code: ' + error.data.error_code + ' | Reason: ' + error.data.error + ' | Error Description: ' + error.error_description));\n                    winston_1.default.silly(\" \");\n                    yield directlogin('', '', capta);\n                }\n            });\n        });\n    });\n}\nfunction browserlogin() {\n    return __awaiter(this, void 0, void 0, function* () {\n        winston_1.default.info(chalk_1.default.gray('Proceeding to Browser...'));\n        if (index_1.userdata.settings.Chromeexe === '') {\n            winston_1.default.info(chalk_1.default.gray('No Browser Found...'));\n            yield (0, getSettings_1.Chromepaths)();\n            yield (0, loginPage_1.Login)();\n            yield getTwitchUserDetails();\n        }\n        else {\n            winston_1.default.info(chalk_1.default.gray('Browser Found...'));\n            yield (0, loginPage_1.Login)();\n            yield getTwitchUserDetails();\n        }\n    });\n}\nfunction getTwitchUserDetails() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (index_1.userdata.auth_token || fs_1.default.existsSync('./twitch-session.json')) {\n            if (fs_1.default.existsSync('./twitch-session.json')) {\n                const data = yield fs_1.default.promises.readFile('./twitch-session.json', 'utf8');\n                let cookiedata = JSON.parse(data);\n                for (let i = 0; i < cookiedata.length; i++) {\n                    if (cookiedata[i].name === 'auth-token') {\n                        index_1.userdata.auth_token = cookiedata[i].value;\n                        break;\n                    }\n                }\n            }\n            if (index_1.userdata.auth_token === \"\") {\n                winston_1.default.error('ERROR');\n                throw 'Could somehow not find a auth token in your twitch session...';\n            }\n        }\n        else {\n            winston_1.default.error('ERROR');\n            throw 'Could somehow not find a twitch session...';\n        }\n        let auth = 'OAuth ' + index_1.userdata.auth_token;\n        let head = {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:98.0) Gecko/20100101 Firefox/98.0',\n            Authorization: auth\n        };\n        yield axios_1.default.get('https://id.twitch.tv/oauth2/validate', { headers: head, raxConfig: util_1.retryConfig })\n            .then(function (response) {\n            let response_data = response.data;\n            index_1.userdata.userid = response_data.user_id;\n            index_1.userdata.clientid = response_data.client_id;\n        })\n            .catch(function (error) {\n            winston_1.default.error(chalk_1.default.red('ERROR: Could not validate your auth token...'));\n            throw error.response.status + ' ' + error.response.statusText + ' ' + error.response.data.message;\n        });\n    });\n}\n"],
  "mappings": "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",
  "names": []
}
