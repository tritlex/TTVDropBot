{
  "version": 3,
  "sources": ["../../../build/Checks/pointsCheck.js"],
  "sourcesContent": ["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pointsCheck = void 0;\nconst index_1 = require(\"../index\");\nconst winston_1 = __importDefault(require(\"winston\"));\nconst chalk_1 = __importDefault(require(\"chalk\"));\nconst TwitchGQL = require(\"@zaarrg/twitch-gql-ttvdropbot\").Init();\nlet points = 0;\nfunction pointsCheck(channelLogin) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const opts = {\n            channelLogin: channelLogin\n        };\n        const pointsrequest = yield TwitchGQL._SendQuery(\"ChannelPointsContext\", opts, '1530a003a7d374b0380b79db0be0534f30ff46e61cffa2bc0e2468a909fbc024', 'OAuth ' + index_1.userdata.auth_token, true, {}, true);\n        points = pointsrequest[0].data.community.channel.self.communityPoints.balance;\n        let channelID = pointsrequest[0].data.community.id;\n        yield checkisClaimeable(pointsrequest, channelID, index_1.userdata.settings.AutoPoints);\n        return points;\n    });\n}\nexports.pointsCheck = pointsCheck;\nfunction checkisClaimeable(request, channelId, autopoints) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let ClaimId = \"\";\n        try {\n            ClaimId = request[0].data.community.channel.self.communityPoints.availableClaim.id;\n        }\n        catch (e) {\n            if (index_1.userdata.settings.debug)\n                winston_1.default.info(\"No points to be claimed...\");\n        }\n        if (ClaimId !== \"\") {\n            //Claim Process\n            const opts = {\n                input: {\n                    channelID: channelId,\n                    claimID: ClaimId\n                },\n            };\n            if (autopoints) {\n                //Auto Points if possible\n                const claimrequest = yield TwitchGQL._SendQuery(\"ClaimCommunityPoints\", opts, '46aaeebe02c99afdf4fc97c7c0cba964124bf6b0af229395f1f6d1feed05b3d0', 'OAuth ' + index_1.userdata.auth_token, true, {}, true);\n                points = claimrequest[0].data.claimCommunityPoints.currentPoints;\n                winston_1.default.info(chalk_1.default.gray('Claimed Channel Points...'), { event: \"claim\" });\n            }\n            else if (!autopoints) {\n                //Skipping Points if disabled\n                winston_1.default.info(chalk_1.default.gray('Skipping Points...'), { event: \"claim\" });\n            }\n        }\n    });\n}\n"],
  "mappings": ";AACA,IAAI,YAAa,WAAQ,QAAK,aAAc,SAAU,SAAS,YAAY,GAAG,WAAW;AACrF,iBAAe,OAAO;AAAE,WAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,SAAS;AAAE,cAAQ;AAAA;AAAA;AAC/F,SAAO,IAAK,MAAM,KAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,uBAAmB,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK;AAAA,eAAkB,GAAP;AAAY,eAAO;AAAA;AAAA;AACpF,sBAAkB,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,SAAS;AAAA,eAAkB,GAAP;AAAY,eAAO;AAAA;AAAA;AACvF,kBAAc,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,SAAS,MAAM,OAAO,OAAO,KAAK,WAAW;AAAA;AAClG,SAAM,aAAY,UAAU,MAAM,SAAS,cAAc,KAAK;AAAA;AAAA;AAGtE,IAAI,kBAAmB,WAAQ,QAAK,mBAAoB,SAAU,KAAK;AACnE,SAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW;AAAA;AAExD,OAAO,eAAe,SAAS,cAAc,EAAE,OAAO;AACtD,QAAQ,cAAc;AACtB,MAAM,UAAU,QAAQ;AACxB,MAAM,YAAY,gBAAgB,QAAQ;AAC1C,MAAM,UAAU,gBAAgB,QAAQ;AACxC,MAAM,YAAY,QAAQ,iCAAiC;AAC3D,IAAI,SAAS;AACb,qBAAqB,cAAc;AAC/B,SAAO,UAAU,MAAM,QAAQ,QAAQ,aAAa;AAChD,UAAM,OAAO;AAAA,MACT;AAAA;AAEJ,UAAM,gBAAgB,MAAM,UAAU,WAAW,wBAAwB,MAAM,oEAAoE,WAAW,QAAQ,SAAS,YAAY,MAAM,IAAI;AACrM,aAAS,cAAc,GAAG,KAAK,UAAU,QAAQ,KAAK,gBAAgB;AACtE,QAAI,YAAY,cAAc,GAAG,KAAK,UAAU;AAChD,UAAM,kBAAkB,eAAe,WAAW,QAAQ,SAAS,SAAS;AAC5E,WAAO;AAAA;AAAA;AAGf,QAAQ,cAAc;AACtB,2BAA2B,SAAS,WAAW,YAAY;AACvD,SAAO,UAAU,MAAM,QAAQ,QAAQ,aAAa;AAChD,QAAI,UAAU;AACd,QAAI;AACA,gBAAU,QAAQ,GAAG,KAAK,UAAU,QAAQ,KAAK,gBAAgB,eAAe;AAAA,aAE7E,GAAP;AACI,UAAI,QAAQ,SAAS,SAAS;AAC1B,kBAAU,QAAQ,KAAK;AAAA;AAE/B,QAAI,YAAY,IAAI;AAEhB,YAAM,OAAO;AAAA,QACT,OAAO;AAAA,UACH,WAAW;AAAA,UACX,SAAS;AAAA;AAAA;AAGjB,UAAI,YAAY;AAEZ,cAAM,eAAe,MAAM,UAAU,WAAW,wBAAwB,MAAM,oEAAoE,WAAW,QAAQ,SAAS,YAAY,MAAM,IAAI;AACpM,iBAAS,aAAa,GAAG,KAAK,qBAAqB;AACnD,kBAAU,QAAQ,KAAK,QAAQ,QAAQ,KAAK,8BAA8B,EAAE,OAAO;AAAA,iBAE9E,CAAC,YAAY;AAElB,kBAAU,QAAQ,KAAK,QAAQ,QAAQ,KAAK,uBAAuB,EAAE,OAAO;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
